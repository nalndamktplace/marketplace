{"version":3,"file":"static/js/472.71b0de80.chunk.js","mappings":"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","sources":["pages/Explore.jsx"],"sourcesContent":["import axios from 'axios'\nimport { useNavigate } from 'react-router'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setSnackbar } from '../store/actions/snackbar'\nimport { isFilled, isUsable } from '../helpers/functions'\nimport { hideSpinner, showSpinner } from '../store/actions/spinner'\n\nimport { BASE_URL } from '../config/env'\nimport { EXPLORE_PAGE_FILTERS } from '../config/filters'\n\nimport Page from '../components/hoc/Page/Page'\nimport Contracts from '../connections/contracts'\nimport Button from '../components/ui/Buttons/Button'\nimport BookItem from '../components/ui/BookItem/BookItem'\n// import Pagination from '../components/ui/Pagination/Pagination'\nimport FilterPanel from '../components/ui/FilterPanel/FilterPanel'\n\nimport {ReactComponent as FilterIcon} from \"../assets/icons/filter.svg\"\nimport {ReactComponent as GridViewIcon} from \"../assets/icons/layout-grid.svg\"\nimport {ReactComponent as ListViewIcon} from \"../assets/icons/layout-list.svg\"\nimport GaTracker from '../trackers/ga-tracker'\n\nconst ExplorePage = () => {\n\n\tconst DEFAULT_FILTERS = [{key: 'price', value: null, type: 'range'}, {key: 'genres', value: [], type: 'multiselect'}, {key: 'age_group', value: [], type: 'multiselect'}, {key: 'orderby', value: null, type: 'select'}]\n\n\tconst navigate = useNavigate()\n\tconst dispatch = useDispatch()\n\n\tconst WalletState = useSelector(state => state.WalletState)\n\n\tconst [Nfts, setNfts] = useState([])\n\tconst [WalletAddress, setWalletAddress] = useState(null)\n\tconst [Filters, setFilters] = useState(DEFAULT_FILTERS)\n\tconst [Loading, setLoading] = useState(false)\n\tconst [FiltersPanelOpen, setFiltersPanelOpen] = useState(false)\n\tconst [layout, setLayout] = useState(window.innerWidth<600?\"LIST\":\"GRID\")\n\t// const [currentPage, setCurrentPage] = useState(1)\n\t// const [maxPage, setMaxPage] = useState(10)\n\tconst [AllNfts, setAllNfts] = useState([])\n\tconst [maxPrice, setMaxPrice] = useState(100);\n\n\tconst buyHandler = nft => {\n\t\tGaTracker('event_explore_purchase_new')\n\t\tsetLoading(true)\n\t\tContracts.purchaseNft(WalletAddress, nft.book_address, nft.price.toString(), WalletState.wallet.signer).then(res => {\n\t\t\tdispatch(setSnackbar({show: true, message: \"Book purchased.\", type: 1}))\n\t\t\tconst tokenId = Number(res.events.filter(event => event.eventSignature === \"Transfer(address,address,uint256)\")[0].args[2]._hex)\n\t\t\taxios({\n\t\t\t\turl: BASE_URL+'/api/book/purchase',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {ownerAddress: WalletAddress, bookAddress: nft.book_address, tokenId}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status !== 200) dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t\taxios({ url: BASE_URL+'/api/book/copies', method: 'POST', data: { bookAddress: nft.book_address, copies: tokenId } }).then(res => {\n\t\t\t\tif(res.status !== 200) dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t})\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\tif(err.code === 4001)\n\t\t\t\tdispatch(setSnackbar({show: true, message: \"Transaction denied by user.\", type: 3}))\n\t\t\telse dispatch(setSnackbar('ERROR'))\n\t\t})\n\t}\n\n\tconst openHandler = nft => {\n\t\tGaTracker('navigate_explore_book')\n\t\tnavigate('/book', {state: nft})\n\t}\n\n\tconst renderNfts = () => {\n\t\tlet nftDOM = []\n\t\tNfts.forEach(nft => {\n\t\t\tnftDOM.push(<BookItem layout={layout} key={nft.id} book={nft} onBuy={()=>buyHandler(nft)} onOpen={()=>openHandler(nft)}/>)\n\t\t})\n\t\treturn nftDOM\n\t}\n\n\tuseEffect(() => { GaTracker('page_view_explore') }, [])\n\n\tuseEffect(() => {\n\t\tif(Loading) dispatch(showSpinner())\n\t\telse dispatch(hideSpinner())\n\t}, [Loading, dispatch])\n\n\tuseEffect(() => {\n\t\tsetLoading(true)\n\t\taxios({\n\t\t\turl: BASE_URL + '/api/book/all',\n\t\t\tmethod: 'GET'\n\t\t}).then(res => {\n\t\t\tif(res.status === 200) setAllNfts(res.data)\n\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t}).catch(err => {\n\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t}).finally(() => setLoading(false))\n\t}, [dispatch])\n\n\tuseEffect(() => {\n\t\tsetLoading(true)\n\t\tif(isUsable(WalletState.wallet.provider)) setWalletAddress(WalletState.wallet.address)\n\t\tsetLoading(false)\n\t}, [WalletState])\n\n\tuseEffect(() => {\n\t\tlet nfts = AllNfts\n\t\tif(isUsable(nfts)){\n\t\t\tFilters.forEach(filter => {\n\t\t\t\tswitch (filter.type) {\n\t\t\t\t\tcase 'range':\n\t\t\t\t\t\tif(isUsable(filter.value))\n\t\t\t\t\t\tnfts = nfts.filter(nft => nft[filter.key] <= filter.value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'multiselect':\n\t\t\t\t\t\tif(isFilled(filter.value)){\n\t\t\t\t\t\t\tlet tempNfts = []\n\t\t\t\t\t\t\tfilter.value.forEach(filterValue => nfts.forEach(nft => { if(nft[filter.key].indexOf(filterValue)>-1 && tempNfts.filter(tempNft => tempNft[\"id\"] === nft.id).length<1) tempNfts.push(nft) }) )\n\t\t\t\t\t\t\tnfts = tempNfts\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'select':\n\t\t\t\t\t\tif(filter.key === 'orderby'){\n\t\t\t\t\t\t\tswitch (filter.value) {\n\t\t\t\t\t\t\t\tcase 'PRICE_L_H':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.price<b.price)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'PRICE_H_L':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.price>b.price)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'RATING_L_H':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.rating<b.rating)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'RATING_H_L':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.rating>b.rating)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetNfts(nfts)\n\t\t}\n\t}, [Filters, AllNfts])\n\n\tuseEffect(()=>{\n\t\tif(!isFilled(AllNfts)) return ;\n\t\tlet maxNftPrice = Math.max(...AllNfts.map(nft => nft.price));\n\t\tmaxNftPrice = Math.ceil(maxNftPrice / 10) * 10 ; \n\t\tsetMaxPrice(maxNftPrice||100)\n\t},[AllNfts])\n\n\treturn (\n\t\t<Page noFooter={true} showRibbion={false} noPadding={true} fluid={true} containerClass={'explore'}>\n\t\t\t<div className=\"explore__data\">\n\t\t\t\t<div className=\"explore__data__filter-panel-container\" data-filter-open={FiltersPanelOpen}>\n\t\t\t\t\t<FilterPanel maxPrice={maxPrice} setFiltersPanelOpen={setFiltersPanelOpen} config={EXPLORE_PAGE_FILTERS} defaults={DEFAULT_FILTERS} filters={Filters} setFilters={setFilters}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"explore__data__books\" data-filter-open={FiltersPanelOpen}> \n\t\t\t\t\t<div className=\"explore__data__books__header\">\n\t\t\t\t\t\t<div className='explore__data__books__header__filter'>\n\t\t\t\t\t\t\t<Button type=\"icon\" onClick={()=>setFiltersPanelOpen(s=>!s)}><FilterIcon fill={FiltersPanelOpen?\"currentColor\":\"transparent\"} /></Button>\n\t\t\t\t\t\t\t<div className=\"typo__body typo__color--n500\">Found <span className=\"typo__color--n700\" style={{fontWeight:\"500\"}}>{Nfts.length}</span> results</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"explore__data__books__header__layout\">\n\t\t\t\t\t\t\t<Button className=\"account__data__books__header__layout__button typo__act\" onClick={()=>setLayout(\"LIST\")}><ListViewIcon/><span>List</span></Button>\n\t\t\t\t\t\t\t<Button className=\"account__data__books__header__layout__button typo__act\" onClick={()=>setLayout(\"GRID\")}><GridViewIcon/><span>GRID</span></Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"explore__data__books__wrapper\" data-layout={layout}>\n\t\t\t\t\t\t{isUsable(Nfts) && Nfts.length > 0\n\t\t\t\t\t\t\t? \trenderNfts()\n\t\t\t\t\t\t\t: \t<div className='explore__data__books__wrapper__empty'>\n\t\t\t\t\t\t\t\t\t<img src='https://imagedelivery.net/yOWneHxM1h9mu46Te3Yjwg/fb06196e-29ca-4c59-9460-6fdbd43fa700/square240' alt=\"books shelf\" className=\"explore__data__books__wrapper__image\" loading=\"lazy\"/>\n\t\t\t\t\t\t\t\t\t<h4 className=\"typo__head typo__head--4\">No eBooks yet</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{/* <div className=\"explore__data__books__wrapper__pagination\">\n\t\t\t\t\t\t\t<Pagination max={maxPage} current={currentPage} onPageChange={(p)=>setCurrentPage(p)} />\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Page>\n\t)\n}\n\nexport default ExplorePage\n"],"names":["DEFAULT_FILTERS","key","value","type","navigate","useNavigate","dispatch","useDispatch","WalletState","useSelector","state","useState","Nfts","setNfts","WalletAddress","setWalletAddress","Filters","setFilters","Loading","setLoading","FiltersPanelOpen","setFiltersPanelOpen","window","innerWidth","layout","setLayout","AllNfts","setAllNfts","maxPrice","setMaxPrice","useEffect","GaTracker","showSpinner","hideSpinner","axios","url","BASE_URL","method","then","res","status","data","setSnackbar","catch","err","finally","isUsable","wallet","provider","address","nfts","forEach","filter","nft","isFilled","tempNfts","filterValue","indexOf","tempNft","id","length","push","sort","a","b","price","rating","maxNftPrice","Math","max","map","ceil","noFooter","showRibbion","noPadding","fluid","containerClass","className","config","EXPLORE_PAGE_FILTERS","defaults","filters","onClick","s","fill","style","fontWeight","nftDOM","book","onBuy","Contracts","book_address","toString","signer","show","message","tokenId","Number","events","event","eventSignature","args","_hex","ownerAddress","bookAddress","copies","code","buyHandler","onOpen","openHandler","renderNfts","src","alt","loading"],"sourceRoot":""}