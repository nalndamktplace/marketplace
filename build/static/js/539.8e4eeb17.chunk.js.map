{"version":3,"file":"static/js/539.8e4eeb17.chunk.js","mappings":"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","sources":["hook/useCryptoTransacts.js","hook/useRazorpay.js","pages/Book.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\n\nimport { keccak256 } from '@ethersproject/keccak256'\nimport { toUtf8Bytes } from '@ethersproject/strings'\n\nimport { useAccount } from 'wagmi'\n\nimport { hideSpinner, showSpinner } from '../store/actions/spinner'\n\nimport { GAS_LIMIT, USDC_ADDRESS } from '../config/constants'\nimport { useSelector } from 'react-redux'\nimport { isFilled, isUsable } from '../helpers/functions'\nimport useWallet from './useWallet'\nimport { ethers } from 'ethers'\nimport axios from 'axios'\nimport { setSnackbar } from '../store/actions/snackbar'\nimport { BASE_URL } from '../config/env'\nimport Contracts from '../connections/contracts'\nimport { hideModal } from '../store/actions/modal'\nimport { MARKET_CONTRACT_ADDRESS } from '../config/contracts'\n\nconst useCryptoTransacts = () => {\n\tconst UserState = useSelector(state => state.UserState)\n\tconst BWalletState = useSelector(state => state.BWalletState)\n\n\tconst wallet = useWallet()\n\tconst dispatch = useDispatch()\n\tconst w3mAccount = useAccount()\n\n\tconst [Loading, setLoading] = useState(false)\n\n\tconst headers = { address: wallet.getAddress(), 'user-id': UserState.user.uid, authorization: `Bearer ${UserState.tokens?.acsTkn?.tkn}` }\n\n\tlet orderId = null\n\n\tconst BiconomyTransactions = {\n\t\tpurchase: async (bookAddress, bookPrice, onPurchaseHandler) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true)\n\n\t\t\t\tconst order = await axios.post(`${BASE_URL}/api/book/crypto/order/wc`, { amount: bookPrice }, { headers })\n\t\t\t\tif (order.status === 200) orderId = order.data.id\n\n\t\t\t\tconst approveErc721Interface = new ethers.utils.Interface(['function approve(address spender, uint256 amount)'])\n\t\t\t\tconst address = wallet.getAddress()\n\t\t\t\t// const approveData = approveErc721Interface.encodeFunctionData( 'approve', [bookAddress, ethers.utils.parseUnits(bookPrice.toString(), 6)] )\n\t\t\t\t// const approveData = approveErc721Interface.encodeFunctionData( 'approve', [bookAddress, ethers.utils.parseEther(bookPrice.toString())] )\n\t\t\t\tconst approveData = approveErc721Interface.encodeFunctionData('approve', [bookAddress, ethers.utils.parseEther(bookPrice.toString())])\n\t\t\t\tconst approveTx = { to: USDC_ADDRESS, data: approveData }\n\t\t\t\tconst safeMintErc721Interface = new ethers.utils.Interface(['function safeMint(address to)'])\n\t\t\t\t// const safeMintErc721Interface = new ethers.utils.Interface(['function privateMint(address to, uint256 _mintPrice, uint256 _authorEarningsPaidout)'])\n\t\t\t\tconst safeMintData = safeMintErc721Interface.encodeFunctionData('safeMint', [address])\n\t\t\t\t// const safeMintData = safeMintErc721Interface.encodeFunctionData('privateMint', [address, ethers.utils.parseEther(bookPrice.toString()), ethers.utils.parseEther(bookPrice.toString())])\n\t\t\t\tconst safeMintTx = { to: bookAddress, data: safeMintData }\n\t\t\t\tBWalletState.smartAccount.on('txMined', async response => {\n\t\t\t\t\tconst txHash = response.receipt.transactionHash\n\t\t\t\t\tconst logs = response.receipt.logs.filter(\n\t\t\t\t\t\tlog =>\n\t\t\t\t\t\t\tlog.address === bookAddress &&\n\t\t\t\t\t\t\tlog.topics.length === 4 &&\n\t\t\t\t\t\t\tisFilled(log.topics.filter(topic => topic === keccak256(toUtf8Bytes('Transfer(address,address,uint256)')) && isFilled(log.topics[log.topics.length - 1])))\n\t\t\t\t\t)\n\t\t\t\t\tif (isFilled(logs)) {\n\t\t\t\t\t\taxios.post(`${BASE_URL}/api/book/crypto/mine`, { transactionId: orderId, wallet: wallet.getAddress(), hash: txHash }, { headers })\n\n\t\t\t\t\t\tconst tokenId = parseInt(logs[0].topics[logs[0].topics.length - 1])\n\t\t\t\t\t\taxios({\n\t\t\t\t\t\t\turl: `${BASE_URL}/api/book/copies`,\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\tdata: { bookAddress: bookAddress, copies: tokenId },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(res => {})\n\t\t\t\t\t\t\t.catch(err => {})\n\t\t\t\t\t\tconst data = { ownerAddress: address, bookAddress: bookAddress, tokenId, purchasePrice: bookPrice }\n\t\t\t\t\t\tconst purchase = await axios.post(`${BASE_URL}/api/book/purchase`, data, { headers })\n\t\t\t\t\t\tif (purchase.status === 200) onPurchaseHandler()\n\t\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tBWalletState.smartAccount.on('error', response => {\n\t\t\t\t\taxios.post(`${BASE_URL}/api/book/crypto/error/bc`, { transactionId: orderId, error: response }, { headers })\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t})\n\t\t\t\t// const transactions = [approveTx]\n\t\t\t\tconst transactions = [safeMintTx]\n\t\t\t\t// const transactions = [approveTx, safeMintTx]\n\t\t\t\tconst feeQuotes = await BWalletState.smartAccount.prepareRefundTransactionBatch({ transactions })\n\t\t\t\tconst transaction = await BWalletState.smartAccount.createRefundTransactionBatch({ transactions, feeQuote: feeQuotes[1] })\n\t\t\t\tawait BWalletState.smartAccount.sendTransaction({\n\t\t\t\t\ttx: transaction,\n\t\t\t\t\tgasLimit: { hex: GAS_LIMIT, type: 'hex' },\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\taxios.post(`${BASE_URL}/api/book/crypto/error/bc`, { transactionId: orderId, error }, { headers })\n\t\t\t\tsetLoading(false)\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}\n\t\t},\n\t\tpublish: async (\n\t\t\tcoverUrl,\n\t\t\tprice,\n\t\t\tsecondaryFromInDays,\n\t\t\tlanguageId,\n\t\t\tgenreIDs,\n\t\t\tpreview,\n\t\t\tname,\n\t\t\tauthor,\n\t\t\tcover,\n\t\t\tbookUrl,\n\t\t\tgenres,\n\t\t\tageGroup,\n\t\t\tpages,\n\t\t\tpublication,\n\t\t\tsynopsis,\n\t\t\tlanguage,\n\t\t\tpublished,\n\t\t\tsecondaryFrom,\n\t\t\tonPublishHandler\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tconst erc721Interface = new ethers.utils.Interface([\n\t\t\t\t\t'function createNewBook(address _author, string memory _coverURI, uint256 _initialPrice, uint256 _daysForSecondarySales, uint256 _lang, uint256[] memory _genre )',\n\t\t\t\t])\n\t\t\t\tconst address = BWalletState.smartAccount.address\n\t\t\t\tconst data = erc721Interface.encodeFunctionData(\n\t\t\t\t\t// 'createNewBook', [address, coverUrl, ethers.utils.parseUnits(price, 6), secondaryFromInDays, languageId, genreIDs]\n\t\t\t\t\t'createNewBook',\n\t\t\t\t\t[address, coverUrl, ethers.utils.parseEther(price), secondaryFromInDays, languageId, genreIDs]\n\t\t\t\t)\n\t\t\t\tconst tx = {\n\t\t\t\t\tto: MARKET_CONTRACT_ADDRESS,\n\t\t\t\t\tdata,\n\t\t\t\t}\n\t\t\t\tBWalletState.smartAccount.on('txMined', response => {\n\t\t\t\t\tresponse.receipt.logs.forEach(log => {\n\t\t\t\t\t\tlog.topics.forEach(topic => {\n\t\t\t\t\t\t\tif (topic === keccak256(toUtf8Bytes('OwnershipTransferred(address,address)'))) {\n\t\t\t\t\t\t\t\tconst bookAddress = log.address\n\t\t\t\t\t\t\t\tconst txHash = response.receipt.transactionHash\n\t\t\t\t\t\t\t\tconst status = response.receipt.status\n\t\t\t\t\t\t\t\tif (isUsable(bookAddress) && isUsable(status) && status === 1 && isUsable(txHash)) {\n\t\t\t\t\t\t\t\t\tlet formData = new FormData()\n\t\t\t\t\t\t\t\t\tformData.append('epub', preview)\n\t\t\t\t\t\t\t\t\tformData.append('name', name)\n\t\t\t\t\t\t\t\t\tformData.append('author', author)\n\t\t\t\t\t\t\t\t\tformData.append('cover', coverUrl)\n\t\t\t\t\t\t\t\t\tformData.append('coverFile', cover)\n\t\t\t\t\t\t\t\t\tformData.append('book', bookUrl)\n\t\t\t\t\t\t\t\t\tformData.append('genres', genres)\n\t\t\t\t\t\t\t\t\tformData.append('ageGroup', ageGroup)\n\t\t\t\t\t\t\t\t\tformData.append('price', price)\n\t\t\t\t\t\t\t\t\tformData.append('pages', pages)\n\t\t\t\t\t\t\t\t\tformData.append('publication', publication)\n\t\t\t\t\t\t\t\t\tformData.append('synopsis', synopsis)\n\t\t\t\t\t\t\t\t\tformData.append('language', language)\n\t\t\t\t\t\t\t\t\tformData.append('published', published)\n\t\t\t\t\t\t\t\t\tformData.append('secondarySalesFrom', secondaryFrom)\n\t\t\t\t\t\t\t\t\tformData.append('publisherAddress', wallet.getAddress())\n\t\t\t\t\t\t\t\t\tformData.append('bookAddress', bookAddress)\n\t\t\t\t\t\t\t\t\tformData.append('txHash', txHash)\n\t\t\t\t\t\t\t\t\taxios({\n\t\t\t\t\t\t\t\t\t\turl: BASE_URL + '/api/book/publish',\n\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\tdata: formData,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.then(res4 => {\n\t\t\t\t\t\t\t\t\t\t\tif (res4.status === 200) {\n\t\t\t\t\t\t\t\t\t\t\t\tonPublishHandler()\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\t\t\t\tif (isUsable(err.response)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (err.response.status === 413) dispatch(setSnackbar('LIMIT_FILE_SIZE'))\n\t\t\t\t\t\t\t\t\t\t\t\telse if (err.response.status === 415) dispatch(setSnackbar('INVALID_FILE_TYPE'))\n\t\t\t\t\t\t\t\t\t\t\t} else dispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\t\t\tif (!isUsable(txHash)) dispatch(setSnackbar({ show: true, message: 'The transaction to mint eBook failed.', type: 3 }))\n\t\t\t\t\t\t\t\t\telse dispatch(setSnackbar({ show: true, message: `The transaction to mint eBook failed.\\ntxhash: ${txHash}`, type: 3 }))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tBWalletState.smartAccount.on('error', response => {\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t})\n\t\t\t\tconst feeQuotes = await BWalletState.smartAccount.prepareRefundTransaction({ transaction: tx })\n\t\t\t\tconst transaction = await BWalletState.smartAccount.createRefundTransaction({\n\t\t\t\t\ttransaction: tx,\n\t\t\t\t\tfeeQuote: feeQuotes[1],\n\t\t\t\t})\n\t\t\t\tconst sendtransaction = await BWalletState.smartAccount.sendTransaction({\n\t\t\t\t\ttx: transaction,\n\t\t\t\t\tgasLimit: {\n\t\t\t\t\t\thex: GAS_LIMIT,\n\t\t\t\t\t\ttype: 'hex',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tsetLoading(false)\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}\n\t\t},\n\t}\n\n\tconst WalletConnectTransactions = {\n\t\tpurchase: async (bookAddress, bookPrice, onPurchaseHandler) => {\n\t\t\tconst order = await axios.post(`${BASE_URL}/api/book/crypto/order/wc`, { amount: bookPrice }, { headers })\n\t\t\tif (order.status === 200) orderId = order.data.id\n\n\t\t\tsetLoading(true)\n\t\t\tContracts.purchaseNft(wallet.getAddress(), bookAddress, bookPrice.toString(), wallet.getSigner())\n\t\t\t\t.then(res => {\n\t\t\t\t\tdispatch(setSnackbar({ show: true, message: 'Book purchased.', type: 1 }))\n\t\t\t\t\tdispatch(hideModal())\n\t\t\t\t\tconst tokenId = Number(res.events.filter(event => event.eventSignature === 'Transfer(address,address,uint256)')[0].args[2]._hex)\n\n\t\t\t\t\taxios.post(`${BASE_URL}/api/book/crypto/mine`, { transactionId: orderId, wallet: wallet.getAddress(), hash: res.transactionHash }, { headers })\n\n\t\t\t\t\taxios({\n\t\t\t\t\t\turl: BASE_URL + '/api/book/purchase',\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata: { ownerAddress: wallet.getAddress(), bookAddress: bookAddress, tokenId, purchasePrice: bookPrice },\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tif (res.status === 200) onPurchaseHandler()\n\t\t\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.finally(() => setLoading(false))\n\t\t\t\t\taxios({\n\t\t\t\t\t\turl: BASE_URL + '/api/book/copies',\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata: { bookAddress: bookAddress, copies: tokenId },\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(res => {})\n\t\t\t\t\t\t.catch(err => {})\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\taxios.post(`${BASE_URL}/api/book/crypto/error/bc`, { transactionId: orderId, error: err }, { headers })\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tif (err.message) {\n\t\t\t\t\t\tif (err?.message?.indexOf('execution reverted: ERC20: transfer amount exceeds balance') > -1)\n\t\t\t\t\t\t\tdispatch(setSnackbar({ show: true, message: 'You do not have enough USDC to purchase this book. Please visit the faucet to get some.', type: 3 }))\n\t\t\t\t\t\telse if (err?.message?.indexOf('execution reverted: NalndaBook: Book unapproved from marketplace!') > -1)\n\t\t\t\t\t\t\tdispatch(setSnackbar({ show: true, message: 'The book has not been approved for sales yet. Please try again later.', type: 3 }))\n\t\t\t\t\t\telse if (err.code === 4001) dispatch(setSnackbar({ show: true, message: 'Transaction denied by user.', type: 3 }))\n\t\t\t\t\t} else dispatch(setSnackbar('ERROR'))\n\t\t\t\t})\n\t\t},\n\t\tpublish: (\n\t\t\tcoverUrl,\n\t\t\tprice,\n\t\t\tsecondaryFromInDays,\n\t\t\tlanguageId,\n\t\t\tgenreIDs,\n\t\t\tpreview,\n\t\t\tname,\n\t\t\tauthor,\n\t\t\tcover,\n\t\t\tbookUrl,\n\t\t\tgenres,\n\t\t\tageGroup,\n\t\t\tpages,\n\t\t\tpublication,\n\t\t\tsynopsis,\n\t\t\tlanguage,\n\t\t\tpublished,\n\t\t\tsecondaryFrom,\n\t\t\tonPublishHandler\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tContracts.listNftForSales(wallet.getAddress(), coverUrl, price, secondaryFromInDays, languageId, genreIDs, wallet.getSigner())\n\t\t\t\t\t.then(tx => {\n\t\t\t\t\t\tconst bookAddress = tx.events.filter(event => event['event'] === 'OwnershipTransferred')[0].address\n\t\t\t\t\t\tconst status = tx.status\n\t\t\t\t\t\tconst txHash = tx.transactionHash\n\t\t\t\t\t\tif (isUsable(bookAddress) && isUsable(status) && status === 1 && isUsable(txHash)) {\n\t\t\t\t\t\t\tlet formData = new FormData()\n\t\t\t\t\t\t\tformData.append('epub', preview)\n\t\t\t\t\t\t\tformData.append('name', name)\n\t\t\t\t\t\t\tformData.append('author', author)\n\t\t\t\t\t\t\tformData.append('cover', coverUrl)\n\t\t\t\t\t\t\tformData.append('coverFile', cover)\n\t\t\t\t\t\t\tformData.append('book', bookUrl)\n\t\t\t\t\t\t\tformData.append('genres', genres)\n\t\t\t\t\t\t\tformData.append('ageGroup', ageGroup)\n\t\t\t\t\t\t\tformData.append('price', price)\n\t\t\t\t\t\t\tformData.append('pages', pages)\n\t\t\t\t\t\t\tformData.append('publication', publication)\n\t\t\t\t\t\t\tformData.append('synopsis', synopsis)\n\t\t\t\t\t\t\tformData.append('language', language)\n\t\t\t\t\t\t\tformData.append('published', published)\n\t\t\t\t\t\t\tformData.append('secondarySalesFrom', secondaryFrom)\n\t\t\t\t\t\t\tformData.append('publisherAddress', wallet.getAddress())\n\t\t\t\t\t\t\tformData.append('bookAddress', bookAddress)\n\t\t\t\t\t\t\tformData.append('txHash', txHash)\n\t\t\t\t\t\t\taxios({\n\t\t\t\t\t\t\t\turl: BASE_URL + '/api/book/publish',\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\tdata: formData,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then(res4 => {\n\t\t\t\t\t\t\t\t\tif (res4.status === 200) {\n\t\t\t\t\t\t\t\t\t\tonPublishHandler()\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\t\tif (isUsable(err.response)) {\n\t\t\t\t\t\t\t\t\t\tif (err.response.status === 413) dispatch(setSnackbar('LIMIT_FILE_SIZE'))\n\t\t\t\t\t\t\t\t\t\telse if (err.response.status === 415) dispatch(setSnackbar('INVALID_FILE_TYPE'))\n\t\t\t\t\t\t\t\t\t} else dispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\tif (!isUsable(txHash)) dispatch(setSnackbar({ show: true, message: 'The transaction to mint eBook failed.', type: 3 }))\n\t\t\t\t\t\t\telse dispatch(setSnackbar({ show: true, message: `The transaction to mint eBook failed.\\ntxhash: ${txHash}`, type: 3 }))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tdispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tsetLoading(false)\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tif (Loading) dispatch(showSpinner())\n\t\telse dispatch(hideSpinner())\n\t}, [Loading, dispatch])\n\n\treturn {\n\t\tpurchaseBook: (bookAddress, bookPrice, onPurchaseHandler) =>\n\t\t\tw3mAccount.isConnected ? WalletConnectTransactions.purchase(bookAddress, bookPrice, onPurchaseHandler) : BiconomyTransactions.purchase(bookAddress, bookPrice, onPurchaseHandler),\n\t\tpublishBook: (\n\t\t\tcoverUrl,\n\t\t\tprice,\n\t\t\tsecondaryFromInDays,\n\t\t\tlanguageId,\n\t\t\tgenreIDs,\n\t\t\tpreview,\n\t\t\tname,\n\t\t\tauthor,\n\t\t\tcover,\n\t\t\tbookUrl,\n\t\t\tgenres,\n\t\t\tageGroup,\n\t\t\tpages,\n\t\t\tpublication,\n\t\t\tsynopsis,\n\t\t\tlanguage,\n\t\t\tpublished,\n\t\t\tsecondaryFrom,\n\t\t\tonPublishHandler\n\t\t) =>\n\t\t\tw3mAccount.isConnected\n\t\t\t\t? WalletConnectTransactions.publish(\n\t\t\t\t\t\tcoverUrl,\n\t\t\t\t\t\tprice,\n\t\t\t\t\t\tsecondaryFromInDays,\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\tgenreIDs,\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tauthor,\n\t\t\t\t\t\tcover,\n\t\t\t\t\t\tbookUrl,\n\t\t\t\t\t\tgenres,\n\t\t\t\t\t\tageGroup,\n\t\t\t\t\t\tpages,\n\t\t\t\t\t\tpublication,\n\t\t\t\t\t\tsynopsis,\n\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\tpublished,\n\t\t\t\t\t\tsecondaryFrom,\n\t\t\t\t\t\tonPublishHandler\n\t\t\t\t  )\n\t\t\t\t: BiconomyTransactions.publish(\n\t\t\t\t\t\tcoverUrl,\n\t\t\t\t\t\tprice,\n\t\t\t\t\t\tsecondaryFromInDays,\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\tgenreIDs,\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tauthor,\n\t\t\t\t\t\tcover,\n\t\t\t\t\t\tbookUrl,\n\t\t\t\t\t\tgenres,\n\t\t\t\t\t\tageGroup,\n\t\t\t\t\t\tpages,\n\t\t\t\t\t\tpublication,\n\t\t\t\t\t\tsynopsis,\n\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\tpublished,\n\t\t\t\t\t\tsecondaryFrom,\n\t\t\t\t\t\tonPublishHandler\n\t\t\t\t  ),\n\t}\n}\n\nexport default useCryptoTransacts\n","import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { BASE_URL } from '../config/env'\nimport { setSnackbar } from '../store/actions/snackbar'\nimport { hideSpinner, showSpinner } from '../store/actions/spinner'\nimport useWallet from './useWallet'\n\nconst useRazorpay = () => {\n\tconst UserState = useSelector(state => state.UserState)\n\n\tconst wallet = useWallet()\n\tconst dispatch = useDispatch()\n\n\tconst [Loading, setLoading] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (Loading) dispatch(showSpinner())\n\t\telse dispatch(hideSpinner())\n\t}, [Loading, dispatch])\n\n\tfunction loadScript(src) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst script = document.createElement('script')\n\t\t\tscript.src = src\n\t\t\tscript.onload = () => {\n\t\t\t\tresolve(true)\n\t\t\t}\n\t\t\tscript.onerror = () => {\n\t\t\t\tresolve(false)\n\t\t\t}\n\t\t\tdocument.body.appendChild(script)\n\t\t})\n\t}\n\n\treturn {\n\t\tcollectPayment: async (transactionAmount, bookName, bookAuthor, bookAddress, buyerName, buyerEmail, buyerNumber, onPurchaseHandler) => {\n\t\t\tsetLoading(true)\n\t\t\tconst res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')\n\t\t\tsetLoading(false)\n\n\t\t\tif (!res) {\n\t\t\t\talert('Razorpay SDK failed to load. Are you online?')\n\t\t\t}\n\n\t\t\t// creating a new order\n\t\t\tconst result = await axios.post(\n\t\t\t\t`${BASE_URL}/api/book/fiat/order`,\n\t\t\t\t{ amount: transactionAmount * 100, currency: 'INR' },\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\taddress: wallet.getAddress(),\n\t\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t\t\t\tauthorization: `Bearer ${UserState.tokens.acsTkn.tkn}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tif (!result) {\n\t\t\t\talert('Server error. Are you online?')\n\t\t\t}\n\n\t\t\t// Getting the order details back\n\t\t\tconst { amount, id: order_id, currency } = result.data\n\n\t\t\tconst options = {\n\t\t\t\tkey: 'rzp_test_b6S0NAjuFymj4M', // Enter the Key ID generated from the Dashboard\n\t\t\t\tamount: amount.toString(),\n\t\t\t\tcurrency: currency,\n\t\t\t\tname: 'Nalnda Marketplace',\n\t\t\t\tdescription: `${bookName} by ${bookAuthor}`,\n\t\t\t\timage: 'https://imagedelivery.net/yOWneHxM1h9mu46Te3Yjwg/779d7e7d-76f3-41e7-8e3c-457d77865300/square160',\n\t\t\t\torder_id: order_id,\n\t\t\t\thandler: async function (response) {\n\t\t\t\t\tsetLoading(true)\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\torderCreationId: order_id,\n\t\t\t\t\t\trazorpayPaymentId: response.razorpay_payment_id,\n\t\t\t\t\t\trazorpayOrderId: response.razorpay_order_id,\n\t\t\t\t\t\trazorpaySignature: response.razorpay_signature,\n\t\t\t\t\t\tbookAddress,\n\t\t\t\t\t\tbookPrice: transactionAmount,\n\t\t\t\t\t}\n\t\t\t\t\tconst headers = {\n\t\t\t\t\t\taddress: wallet.getAddress(),\n\t\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t\t\t\tauthorization: `Bearer ${UserState.tokens.acsTkn.tkn}`,\n\t\t\t\t\t}\n\n\t\t\t\t\tconst minting = await axios.post(`${BASE_URL}/api/book/fiat/mint`, data, { headers })\n\t\t\t\t\tif (minting.status === 200) {\n\t\t\t\t\t\tdispatch(setSnackbar({ show: true, message: 'Purchase Successful! Book has been added to your library.', type: 1 }))\n\t\t\t\t\t\tonPurchaseHandler()\n\t\t\t\t\t} else dispatch(setSnackbar('NOT200'))\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t},\n\t\t\t\tprefill: {\n\t\t\t\t\tname: buyerName,\n\t\t\t\t\temail: buyerEmail,\n\t\t\t\t\tcontact: buyerNumber,\n\t\t\t\t},\n\t\t\t\tnotes: {\n\t\t\t\t\tbookAddress: bookAddress,\n\t\t\t\t},\n\t\t\t\ttheme: {\n\t\t\t\t\tcolor: '#61dafb',\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tconst paymentObject = new window.Razorpay(options)\n\t\t\tpaymentObject.open()\n\t\t},\n\t}\n}\n\nexport default useRazorpay\n","import axios from 'axios'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useNavigate } from 'react-router'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport { ethers } from 'ethers'\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nimport Page from '../components/hoc/Page/Page'\n\nimport Contracts from '../connections/contracts'\n\nimport Stars from '../components/ui/Stars/Stars'\nimport Button from '../components/ui/Buttons/Button'\nimport ListModal from '../components/modal/List/List'\nimport QuoteModal from '../components/modal/Quote/QuoteModal'\nimport ReviewModal from '../components/modal/Review/ReviewModal'\nimport ShareListModal from '../components/modal/ShareList/ShareList'\n\nimport Wallet from '../connections/wallet'\n\nimport GaTracker from '../trackers/ga-tracker'\nimport { BASE_URL } from '../config/env'\nimport { isFilled, isNotEmpty, isUsable } from '../helpers/functions'\n\nimport { setSnackbar } from '../store/actions/snackbar'\nimport { hideSpinner, showSpinner } from '../store/actions/spinner'\nimport { hideModal, showModal, SHOW_LIST_MODAL, SHOW_QUOTE_MODAL, SHOW_REVIEW_MODAL, SHOW_SHARE_MODAL } from '../store/actions/modal'\n\nimport useIsLoggedIn from '../hook/useIsLoggedIn'\n\nimport BackgroundBook from '../assets/images/background-book.svg'\nimport {ReactComponent as LikeIcon} from '../assets/icons/like.svg'\nimport {ReactComponent as CartIcon} from \"../assets/icons/cart-add.svg\"\nimport {ReactComponent as PrintIcon} from \"../assets/icons/print.svg\"\nimport {ReactComponent as QuoteIcon} from \"../assets/icons/quote.svg\"\nimport {ReactComponent as UsersIcon} from \"../assets/icons/users.svg\"\nimport {ReactComponent as ReviewIcon} from \"../assets/icons/message.svg\"\nimport {ReactComponent as SynopsisIcon} from \"../assets/icons/text.svg\"\nimport {ReactComponent as LanguageIcon} from \"../assets/icons/language.svg\"\nimport {ReactComponent as BlockQuoteIcon} from \"../assets/icons/block-quote.svg\"\nimport {ReactComponent as LiveReadersIcon} from \"../assets/icons/live_readers.svg\"\nimport {ReactComponent as ExternalLinkIcon} from \"../assets/icons/external-link.svg\"\nimport {ReactComponent as TotalReadTimeIcon} from \"../assets/icons/total_read_time.svg\"\n\nimport {useWeb3AuthContext} from '../contexts/SocialLoginContext'\nimport useCryptoTransacts from '../hook/useCryptoTransacts'\nimport useRazorpay from '../hook/useRazorpay'\nimport useWallet from '../hook/useWallet'\n\nconst BookPage = props => {\n\n\tconst TABS = [{id: 'TAB01', label: 'Synopsis', icon : <SynopsisIcon />}, {id: 'TAB02', label: 'reviews',icon : <ReviewIcon />}, {id: 'TAB03', label: 'quotes',icon:<BlockQuoteIcon/>}]\n\n\tconst params = useParams()\n\tconst wallet = useWallet()\n\tconst dispatch = useDispatch()\n\tconst navigate = useNavigate()\n\tconst razorpay = useRazorpay()\n\tconst isLoggedIn = useIsLoggedIn()\n\tconst cryptoTransacts = useCryptoTransacts()\n\n\tconst UserState = useSelector(state => state.UserState)\n\tconst BWalletState = useSelector(state=> state.BWalletState)\n\n\tconst [WalletAddress, setWalletAddress] = useState(wallet.getAddress())\n\tconst [Loading, setLoading] = useState(false)\n\tconst [ActiveTab, setActiveTab] = useState('TAB01')\n\t// NFT\n\tconst [NFT, setNFT] = useState(null)\n\tconst [Owner, setOwner] = useState(null)\n\tconst [Listed, setListed] = useState(null)\n\tconst [UserCopy, setUserCopy] = useState(null)\n\tconst [Published, setPublished] = useState(null)\n\t// ListedNFT\n\tconst [bookID, setBookID] = useState(null)\n\t// Likes\n\tconst [Likes, setLikes] = useState(0)\n\tconst [Liked, setLiked] = useState(false)\n\t// Reviews\n\tconst [Rating, setRating] = useState(0)\n\tconst [Review, setReview] = useState(null)\n\tconst [Reviews, setReviews] = useState([])\n\tconst [TotalReveiws, setTotalReveiws] = useState(0)\n\tconst [ReviewForm, setReviewForm] = useState({title: '', body: '', rating: 0})\n\t// Quotes\n\tconst [Quote, setQuote] = useState(null)\n\tconst [Quotes, setQuotes] = useState([])\n\tconst [QuotesForm, setQuotesForm] = useState({quote: ''})\n\t// live reader count\n\tconst [totalReaders, setTotalReaders] = useState(0)\n\tconst [liveReaderCount, setLiveReaderCount] = useState(0)\n\tconst [totalReadTime, setTotalReadTime] = useState(0)\n\t// tabs\n\tconst TabContainerRef = useRef();\n\n\tuseEffect(() => { GaTracker('page_view_book') }, [])\n\n\tuseEffect(() => {\n\t\tif(ActiveTab === 'TAB01') GaTracker('tab_view_book_synopsis')\n\t\telse if(ActiveTab === 'TAB02') GaTracker('tab_view_book_reviews')\n\t\telse GaTracker('tab_view_book_quotes')\n\t}, [ActiveTab])\n\n\tuseEffect(() => { if(isUsable(NFT)) setListed(NFT.listed === 1?true:false) }, [NFT])\n\n\tconst getReviews = useCallback(\n\t\t() => {\n\t\t\tif(isUsable(NFT)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/reviews`,\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tbookAddress: NFT.book_address\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\tsetReviews(res.data.reviews)\n\t\t\t\t\t\tsetRating(res.data.rating)\n\t\t\t\t\t\tsetTotalReveiws(res.data.total)\n\t\t\t\t\t}\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally(() => setLoading(false))\n\t\t\t}\n\t\t},\n\t\t[NFT, dispatch],\n\t)\n\n\tconst getUserReview = useCallback(\n\t\t() => {\n\t\t\tif(isUsable(NFT) && isUsable(WalletAddress)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/reviewed`,\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\tif(isNotEmpty(res.data))\n\t\t\t\t\t\t\tsetReview(res.data)}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally(() => setLoading(false))\n\t\t\t}\n\t\t},\n\t\t[NFT, WalletAddress, dispatch],\n\t)\n\n\tconst getQuotes = useCallback(\n\t\t() => {\n\t\t\tif(isUsable(NFT)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/quotes`,\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tbookAddress: NFT.book_address\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200) setQuotes(res.data)\n\t\t\t\t\telse if(res.status === 204) {}\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally(() => setLoading(false))\n\t\t\t}\n\t\t},\n\t\t[NFT, dispatch],\n\t)\n\n\tconst getUserQuote = useCallback(\n\t\t() => {\n\t\t\tif(isUsable(NFT) && isUsable(WalletAddress)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/quoted`,\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\tif(isNotEmpty(res.data))\n\t\t\t\t\t\t\tsetQuote(res.data)\n\t\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally(() => setLoading(false))\n\t\t\t}\n\t\t},\n\t\t[NFT, WalletAddress, dispatch],\n\t)\n\n\tuseEffect(() => { getReviews() }, [getReviews])\n\n\tuseEffect(() => { getUserReview() }, [getUserReview])\n\n\tuseEffect(() => { getQuotes() }, [getQuotes])\n\n\tuseEffect(() => { getUserQuote() }, [getUserQuote])\n\n\tuseEffect(() => {\n\t\tif(isUsable(NFT)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/book/likes`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: {\n\t\t\t\t\tbookAddress: NFT.book_address\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setLikes(res.data.likes)\n\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally( () => setLoading(false))\n\t\t}\n\t}, [NFT, dispatch])\n\n\tuseEffect(() => {\n\t\tif(isUsable(NFT) && isUsable(WalletAddress)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/book/liked`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: {\n\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setLiked(res.data.liked)\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}, [NFT, WalletAddress, dispatch])\n\n\tuseEffect(() => {\n\t\tif(isUsable(NFT)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/reader/total-reader-count`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: { bookAddress: NFT.book_address }\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setTotalReaders(res.data.total_readers)\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}, [NFT, dispatch])\n\n\tuseEffect(() => {\n\t\tif(isUsable(NFT)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/reader/count`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: { bookAddress: NFT.book_address }\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setLiveReaderCount(res.data.reader_count)\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}, [NFT, dispatch])\n\n\tuseEffect(() => {\n\t\tif(isUsable(NFT)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/reader/total-read-time`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: { bookAddress: NFT.book_address }\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setTotalReadTime(res.data.total_read_time)\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}, [NFT, dispatch])\n\n\tuseEffect(() => { if(isUsable(Review)) setReviewForm({title: Review.title, body: Review.body, rating: Review.rating}) }, [Review])\n\n\tuseEffect(() => {\n        const bookID = params.bookID\n        axios({\n            url: `${BASE_URL}/api/book`,\n            method: 'GET',\n            params: {\n                id: bookID\n            }\n        }).then(res=>{\n            setNFT(res.data[0])\n        })\n\t}, [params])\n\n\tuseEffect(() =>{\n\t\tif(isUsable(WalletAddress) && isUsable(NFT)){\n\t\t\tsetLoading(true)\n\t\t\tconst book = NFT\n\t\t\tif(book.new_owner === WalletAddress) setOwner(true)\n\t\t\telse setOwner(false)\n\t\t\tif(book.publisher_address === WalletAddress) setPublished(true)\n\t\t\telse setPublished(false)\n\t\t\taxios({\n\t\t\t\turl: BASE_URL+'/api/book/owner',\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: {\n\t\t\t\t\townerAddress: WalletAddress,\n\t\t\t\t\tbookAddress: book.book_address\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif(res.status === 200) setOwner(true)\n\t\t\t}).catch(err => {\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t} }, [NFT, params, dispatch, WalletAddress]\n\t)\n\n\tuseEffect(() => { if(isUsable(NFT) && isUsable(Published) && isUsable(Owner)) setLoading(false) }, [NFT, Published, Owner])\n\n\tuseEffect(() => {\n\t\tif(Loading) dispatch(showSpinner())\n\t\telse dispatch(hideSpinner())\n\t}, [Loading, dispatch])\n\n\tuseEffect(()=>{\n\t\tlet activeTabElement = document.getElementById(\"BOOK_PAGE_\" + ActiveTab);\n\t\tif(!isUsable(activeTabElement)) return ;\n\t\tif(!isUsable(TabContainerRef.current)) return;\n\t\tTabContainerRef.current.style.setProperty(\"--marker-x\",activeTabElement.offsetLeft);\n\t},[ActiveTab])\n\n\tuseEffect(() => {\n\t\tif(Owner){\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/user/book`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t\t\t'address': WalletAddress,\n\t\t\t\t\t'authorization': `Bearer ${UserState.tokens.acsTkn.tkn}`\n\t\t\t\t},\n\t\t\t\tparams: {walletAddress: WalletAddress, bookAddress: NFT.book_address}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) {\n\t\t\t\t\tsetUserCopy(res.data)\n\t\t\t\t\tsetListed(res.data.listed)\n\t\t\t\t}\n\t\t\t\telse if(res.status === 204) {}\n\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t})\n\t\t}\n\t}, [Owner, UserState, dispatch, NFT, WalletAddress])\n\n\t// TODO: Write transaction for Biconomy Wallet\n\tconst unlistHandler = () => {\n\t\tGaTracker('event_book_unlist')\n\t\tif(isUsable(WalletAddress)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: BASE_URL + '/api/user/book/listed',\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t\t\t'authorization': `Bearer ${UserState.tokens.acsTkn.tkn}`\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\townerAddress: WalletAddress,\n\t\t\t\t\ttokenId: UserCopy.token_id,\n\t\t\t\t\tbookAddress: NFT.book_address\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200){\n\t\t\t\t\tsetLoading(true)\n\t\t\t\t\tconst orderId = res.data.order_id\n\t\t\t\t\tContracts.unlistBookFromMarketplace(orderId, BWalletState.smartAccount.signer).then(res => {\n\t\t\t\t\t\tsetLoading(true)\n\t\t\t\t\t\taxios({\n\t\t\t\t\t\t\turl: BASE_URL + '/api/book/unlist',\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\townerAddress: WalletAddress,\n\t\t\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).then(res => {\n\t\t\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\t\t\tsetListed(false)\n\t\t\t\t\t\t\t\tdispatch(hideModal())\n\t\t\t\t\t\t\t\tdispatch(setSnackbar({show: true, message: \"Book unlisted from marketplace.\", type: 1}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t\t\t}).finally( ()=> { setLoading(false) })\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\tif(isUsable(err.reason)){\n\t\t\t\t\t\t\tif(err.reason.includes('NFT not yet listed / already sold')) dispatch(setSnackbar({show: true, message: \"eBook already sold or not listed.\", type: 3}))\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse dispatch(setSnackbar('ERROR'))\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t})\n\t\t}\n\t}\n\n\tconst listHandler = () => {\n\t\tdispatch(showModal(SHOW_LIST_MODAL))\n\t\tif(moment(NFT.secondary_sales_from).isSame(moment()) || moment(NFT.secondary_sales_from).isBefore(moment())) dispatch(showModal(SHOW_LIST_MODAL))\n\t\telse if(moment(NFT.secondary_sales_from).isAfter(moment())) dispatch(setSnackbar({show: true, message: `Secondary Sales will open only after ${moment(NFT.secondary_sales_from).format('D MMM, YYYY')}.`, type: 2}))\n\t}\n\n\t// TODO: Write transaction for Biconomy Wallet\n\tconst onListHandler = listPrice => {\n\t\tGaTracker('event_book_list')\n\t\tif(isUsable(WalletAddress)){\n\t\t\tsetLoading(true)\n\t\t\tContracts.listBookToMarketplace(NFT.book_address, UserCopy.token_id, listPrice, BWalletState.smartAccount.signer).then(res => {\n\t\t\t\tsetLoading(true)\n\t\t\t\tconst orderId = parseInt(res.events.filter(event => event.event === 'CoverListed')[0].args[0]._hex)\n\t\t\t\taxios({\n\t\t\t\t\turl: BASE_URL + '/api/book/list',\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\townerAddress: WalletAddress,\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\tbookPrice: listPrice,\n\t\t\t\t\t\tbookOrderId: orderId,\n\t\t\t\t\t\tbookTokenId: UserCopy.token_id\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\tsetListed(true)\n\t\t\t\t\t\tdispatch(hideModal())\n\t\t\t\t\t\tdispatch(setSnackbar({show: true, message: \"Book listed on marketplace.\", type: 1}))\n\t\t\t\t\t\tif(res.data){\n\t\t\t\t\t\t\tsetBookID(res.data)\n\t\t\t\t\t\t\tdispatch(showModal(SHOW_SHARE_MODAL))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally( ()=> { setLoading(false) })\n\t\t\t}).catch(err => {\n\t\t\t\tif(isUsable(err.reason)){\n\t\t\t\t\tif(err.reason.includes(\"Can't list the cover at this time\")) dispatch(setSnackbar({show: true, message: \"Please wait for some more time before listing the book.\", type: 3}))\n\t\t\t\t\telse if(err.reason.includes(\"Listing for this book is disabled\")) dispatch(setSnackbar({show: true, message: \"Listing this book is not allowed right now. Please try again later.\", type: 3}))\n\t\t\t\t\telse if(err.reason.includes(\"Seller should own the NFT to list\")) dispatch(setSnackbar({show: true, message: \"Book is already listed. Please contact us on support@nalnda.com\", type: 3}))\n\t\t\t\t}\n\t\t\t\telse dispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}\n\n\tconst readHandler = async () => {\n\t\tGaTracker('event_book_read')\n\t\tsetLoading(true)\n\t\ttry {\n\t\t\t// axios({\n\t\t\t// \turl: `${BASE_URL}/api/verify`,\n\t\t\t// \tmethod: 'GET',\n\t\t\t// \tparams: {\n\t\t\t// \t\tbookAddress: NFT.book_address,\n\t\t\t// \t\townerAddress: WalletAddress\n\t\t\t// \t}\n\t\t\t// }).then(res => {\n\t\t\t// \tif(res.status === 200){\n\t\t\t// \t\tconst messageToSign = res.data\n\t\t\t// \t\tWallet.signMessage(BWalletState.smartAccount.signer, JSON.stringify(messageToSign)).then(res => {\n\t\t\t// \t\t\tif(res.isValid === true){\n\t\t\t// \t\t\t\taxios({\n\t\t\t// \t\t\t\t\turl : BASE_URL + '/api/verify',\n\t\t\t// \t\t\t\t\tmethod : \"POST\",\n\t\t\t// \t\t\t\t\theaders: {\n\t\t\t// \t\t\t\t\t\t'address': BWalletState.smartAccount.address,\n\t\t\t// \t\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t// \t\t\t\t\t\t'authorization': `Bearer ${UserState.tokens.acsTkn.tkn}`\n\t\t\t// \t\t\t\t\t},\n\t\t\t// \t\t\t\t\tdata : {\n\t\t\t// \t\t\t\t\t\taccountAddress: WalletAddress,\n\t\t\t// \t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t// \t\t\t\t\t\tsignedData: res.signedData,\n\t\t\t// \t\t\t\t\t\tcid : NFT.book.slice(NFT.book.lastIndexOf(\"/\")+1),\n\t\t\t// \t\t\t\t\t}\n\t\t\t// \t\t\t\t}).then(res=>{\n\t\t\t// \t\t\t\t\tif(res.status === 200) {\n\t\t\t// \t\t\t\t\t\tGaTracker('navigate_book_reader')\n\t\t\t// \t\t\t\t\t\tnavigate('/library/reader', {state: {book: {...NFT, url: res.data.url}, preview: false}}) \n\t\t\t// \t\t\t\t\t}\n\t\t\t// \t\t\t\t\telse dispatch(setSnackbar({show:true,message : \"Error\", type : 4}))\n\t\t\t// \t\t\t\t}).catch(err => { dispatch(setSnackbar('ERROR'))\n\t\t\t// \t\t\t\t}).finally( () => setLoading(false))\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\telse dispatch(setSnackbar({show: true, message: \"Could not verify the authenticity of the signature.\", type: 3}))\n\t\t\t// \t\t})\n\t\t\t// \t}\n\t\t\t// \telse dispatch(setSnackbar('NOT200'))\n\t\t\t// })\n\t\t\taxios({\n\t\t\t\turl: `${BASE_URL}/api/verify/mobile`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'address': WalletAddress,\n\t\t\t\t\t'user-id': UserState.user.uid,\n\t\t\t\t\t'authorization': `Bearer ${UserState.tokens.acsTkn.tkn}`\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif(res.status === 200){\n\t\t\t\t\tGaTracker('navigate_book_reader')\n\t\t\t\t\tnavigate('/library/reader', {\n\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\tbook: {\n\t\t\t\t\t\t\t\t...NFT,\n\t\t\t\t\t\t\t\turl: `${res.data.base}?token=${res.data.token}&cid=${res.data.cid}&fileName=${res.data.fileName}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif(err.response?.status === 401) dispatch(setSnackbar({show: true, message: \"Please purchase the book first.\", type: 3})) \n\t\t\t\telse dispatch(setSnackbar('ERROR'))\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tsetLoading(false)\n\t\t}\n\t}\n\n\tconst previewHandler = () => {\n\t\tGaTracker('navigate_book_preview')\n\t\tnavigate('/book/preview', {state: {book: NFT, preview: true}})\n\t}\n\n\tconst onPurchaseHandler = () => setOwner(true)\n\n\tconst fiatPurchaseHandler = () => razorpay.collectPayment(NFT.price, NFT.title, NFT.author, NFT.book_address, UserState.user.name.join(', ', ' '), UserState.user.email, null, onPurchaseHandler)\n\n\tconst cryptoPurchaseHandler = () => cryptoTransacts.purchaseBook(NFT.book_address, NFT.price, onPurchaseHandler)\n\n\tconst reviewModalHandler = () => isLoggedIn?dispatch(showModal(SHOW_REVIEW_MODAL)):dispatch(setSnackbar('NOT_LOGGED_IN'))\n\n\tconst quoteModalHandler = () => isLoggedIn?dispatch(showModal(SHOW_QUOTE_MODAL)):dispatch(setSnackbar('NOT_LOGGED_IN'))\n\n\tconst likeHandler = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tif(Owner){\n\t\t\t\tif(!Liked){\n\t\t\t\t\tsetLikes(old => old+1)\n\t\t\t\t\tGaTracker('event_book_like')\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetLikes(old => old-1)\n\t\t\t\t\tGaTracker('event_book_unlike')\n\t\t\t\t}\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/likes`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\townerAddress: WalletAddress,\n\t\t\t\t\t\tlikedState: !Liked\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200) setLiked(old => !old)\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t}).finally( () => setLoading(false) )\n\t\t\t}\n\t\t\telse dispatch(setSnackbar({show: true, message: \"Only owners can like a book.\", type: 3}))\n\t\t}\n\t\telse dispatch(setSnackbar({show: true, message: \"Please login first.\", type: 3}))\n\t}\n\n\tconst renderGrid = () => {\n\t\treturn (\n\t\t\t<div className='book__data__container__desc__summary__grid typo__color--n700'>\n\t\t\t\t<div className='book__data__container__desc__summary__grid__item'>\n\t\t\t\t\t<LanguageIcon />\n\t\t\t\t\t<div className='book__data__container__desc__summary__grid__item__data'>{NFT.language}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='book__data__container__desc__summary__grid__item'>\n\t\t\t\t\t<UsersIcon />\n\t\t\t\t\t<div className='book__data__container__desc__summary__grid__item__data'>{totalReaders} readers</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='book__data__container__desc__summary__grid__item'>\n\t\t\t\t\t<LiveReadersIcon />\n\t\t\t\t\t<div className='book__data__container__desc__summary__grid__item__data'>{liveReaderCount} people reading</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='book__data__container__desc__summary__grid__item'>\n\t\t\t\t\t<TotalReadTimeIcon />\n\t\t\t\t\t<div className='book__data__container__desc__summary__grid__item__data'>{Math.ceil(totalReadTime / 60)} minutes</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderTabs = () => {\n\t\tlet tabsDOM = []\n\t\tTABS.forEach(tab => {\n\t\t\ttabsDOM.push(\n\t\t\t\t<div onClick={()=>setActiveTab(tab.id)} id={\"BOOK_PAGE_\"+tab.id} className={tab.id === ActiveTab?\"book__data__container__desc__tabs__container__item book__data__container__desc__tabs__container__item--active\":\"book__data__container__desc__tabs__container__item utils__cursor--pointer\"} key={tab.id}>\n\t\t\t\t\t{isUsable(tab.icon) && tab.icon}\n\t\t\t\t\t<h5 className=\"typo__head typo__head--6 typo__transform--capital\">{tab.label}</h5>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\treturn tabsDOM\n\t}\n\n\tconst renderTabData = () => {\n\t\tswitch (ActiveTab) {\n\t\t\tcase 'TAB01':\n\t\t\t\treturn <p className=\"typo--break-spaces typo__body typo__color--n600\">{NFT.synopsis}</p>\n\t\t\tcase 'TAB02':\n\t\t\t\tconst renderReviews = reviews => {\n\t\t\t\t\tlet reviewsDOM = []\n\t\t\t\t\tif(isFilled(reviews)) reviews.forEach(review => reviewsDOM.push(\n\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews__item\">\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews__item__header__head typo__head typo__head--6\">{review.title}</div>\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews__item__header\">\n\t\t\t\t\t\t\t\t<Stars rating={review.rating} size={'small'}/>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews__item__header__time typo__color--n500\">{moment(review.reviewed_at).format(\"D MMM, YYYY\")}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews__item__body typo__body typo__body--2\">{review.body}</div>\n\t\t\t\t\t\t</div>))\n\t\t\t\t\treturn reviewsDOM\n\t\t\t\t}\n\t\t\t\treturn <React.Fragment>\n\t\t\t\t\t{ !isUsable(Review) && Owner ?\n\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action\">\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action__icon\">\n\t\t\t\t\t\t\t\t<ReviewIcon width={32} height={32} stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action__label typo__head--6\">Write a Review</div>\n\t\t\t\t\t\t\t<Button type=\"primary\" onClick={()=>reviewModalHandler()}>Review</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t:null}\n\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__reviews\">\n\t\t\t\t\t\t{renderReviews(Reviews)}\n\t\t\t\t\t\t{Reviews?.length === 0 ? <div className='book__data__container__desc__tabs__data__empty'>No Reviews</div> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\tcase 'TAB03':\n\t\t\t\tconst renderQuotes = quotes => {\n\t\t\t\t\tlet quotesDOM = []\n\t\t\t\t\tquotes.forEach((quote,i) => {\n\t\t\t\t\t\tquotesDOM.push(\n\t\t\t\t\t\t\t<div key={i} className='book__data__container__desc__tabs__data__quotes__item'>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__quotes__item__icon\">\n\t\t\t\t\t\t\t\t\t<QuoteIcon width={32} height={32}  stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__quotes__item__body typo__body\">\n\t\t\t\t\t\t\t\t\t{quote.body}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__quotes__item__time typo__cap typo__cap--2\">\n\t\t\t\t\t\t\t\t\t{moment(quote.created_at).format(\"D MMM, YYYY\") || \"-\"}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\treturn quotesDOM\n\t\t\t\t}\n\t\t\t\treturn <React.Fragment>\n\t\t\t\t\t{ !isUsable(Quote) && ( Published || Owner ) ?\n\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action\">\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action__icon\">\n\t\t\t\t\t\t\t\t<BlockQuoteIcon width={32} height={32} stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__action__label typo__head--6\">Write a Quote</div>\n\t\t\t\t\t\t\t<Button type=\"primary\" onClick={()=>quoteModalHandler()}>Quote</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t:null}\n\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data__quotes\">\n\t\t\t\t\t\t{renderQuotes(Quotes)}\n\t\t\t\t\t\t{Quotes?.length === 0 ? <div className='book__data__container__desc__tabs__data__empty'>No Quotes</div> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tconst reviewHandler = () => {\n\t\tGaTracker('event_book_review')\n\t\tif(isUsable(WalletAddress)){\n\t\t\tif(isNotEmpty(ReviewForm.body) && isNotEmpty(ReviewForm.rating) && isNotEmpty(ReviewForm.title)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/reviews`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\treview: {...ReviewForm},\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200) {\n\t\t\t\t\t\tdispatch(hideModal())\n\t\t\t\t\t\tgetUserReview()\n\t\t\t\t\t\tgetReviews()\n\t\t\t\t\t}\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t})\n\t\t\t}\n\t\t\telse dispatch(setSnackbar({show: true, message: \"Please fill the review.\", type: 3}))\n\t\t}\n\t\telse dispatch(setSnackbar({show: true, message: \"Please login first\", type: 3}))\n\t}\n\n\tconst quoteHandler = () => {\n\t\tGaTracker('event_book_quote')\n\t\tif(isUsable(WalletAddress)){\n\t\t\tif(isNotEmpty(QuotesForm.quote)){\n\t\t\t\tsetLoading(true)\n\t\t\t\taxios({\n\t\t\t\t\turl: `${BASE_URL}/api/book/quotes`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tquote: {body:QuotesForm.quote},\n\t\t\t\t\t\tbookAddress: NFT.book_address,\n\t\t\t\t\t\townerAddress: WalletAddress\n\t\t\t\t\t}\n\t\t\t\t}).then(res => {\n\t\t\t\t\tif(res.status === 200){\n\t\t\t\t\t\tdispatch(hideModal())\n\t\t\t\t\t\tgetUserQuote()\n\t\t\t\t\t\tgetQuotes()\n\t\t\t\t\t}\n\t\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t\t})\n\t\t\t}\n\t\t\telse dispatch(setSnackbar({show: true, message: \"Please enter the quote.\", type: 3}))\n\t\t}\n\t\telse dispatch(setSnackbar({show: true, message: \"Please login first\", type: 3}))\n\t}\n\n\treturn (\n\t\t<>\n\t\t<Helmet>\n\t\t\t<meta name=\"Book's Page\" content='Buy & Read the book you like'/>\n\t\t</Helmet>\n\t\t<Page>\n\t\t\t<div className=\"book__bg\">\n\t\t\t\t<img src={BackgroundBook} alt=\"background\" loading=\"lazy\"/>\n\t\t\t</div>\n\t\t\t{isUsable(NFT)?\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"book__data\">\n\t\t\t\t\t\t<div className=\"book__data__background\"/>\n\t\t\t\t\t\t<div className=\"book__data__container\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className='book__data__container__cover'>\n\t\t\t\t\t\t\t\t\t<img className='book__data__container__cover__image' src={NFT.cover_display_url?NFT.cover_display_url:NFT.cover_public_url?NFT.cover_public_url:NFT.cover} alt={NFT.name}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='book__data__container__meta'>\n\t\t\t\t\t\t\t\t\t<h3 className=\"typo__color--n700 typo__head typo__head--3 typo__transform--capital\">{NFT.title}</h3>\n\t\t\t\t\t\t\t\t\t<h5 className=\"typo__color--n500 typo__head typo__head--6 typo__transform--upper\">{NFT.author}</h5>\n\t\t\t\t\t\t\t\t\t{/* {Owner||Published?null:<div className='book__data__container__meta__price typo-head--6 typo__act typo__color--success'>{NFT.price===0?\"FREE\":<><img src='https://imagedelivery.net/yOWneHxM1h9mu46Te3Yjwg/59c27d12-e4eb-4f74-7a6e-b33ba6537600/icon48' style={{width: 20, height: 20, objectFit: 'contain'}} alt=\"USDC\"/>&nbsp;{NFT.price}</>}</div>} */}\n\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__meta__rating\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__meta__rating__stars\">\n\t\t\t\t\t\t\t\t\t\t\t<Stars size={'small'} rating={Rating}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__meta__rating__count typo__body'>\n\t\t\t\t\t\t\t\t\t\t\t{TotalReveiws} reviews\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__meta__cta\">\n\t\t\t\t\t\t\t\t\t\t{Listed\n\t\t\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"primary\" size=\"lg\" onClick={()=>unlistHandler()}>Unlist</Button>\n\t\t\t\t\t\t\t\t\t\t\t:Published\n\t\t\t\t\t\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"primary\" size=\"lg\" onClick={()=>readHandler()}>Read</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t:Owner\n\t\t\t\t\t\t\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"primary\" size=\"lg\" onClick={()=>readHandler()}>Read</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={()=>listHandler()}>List</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t:<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"primary\" size=\"lg\" onClick={()=>cryptoPurchaseHandler()}><img src='https://imagedelivery.net/yOWneHxM1h9mu46Te3Yjwg/59c27d12-e4eb-4f74-7a6e-b33ba6537600/icon48' style={{width: 20, height: 20, objectFit: 'contain'}} alt=\"USDC\"/>&nbsp;{NFT.price}</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"primary\" size=\"lg\" onClick={()=>fiatPurchaseHandler()}>$&nbsp;{NFT.price}</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={()=>previewHandler()}>Preview</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='book__data__container__desc'>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__left\">\n\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__summary\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__summary__contract\" onClick={()=>window.open(`https://mumbai.polygonscan.com/address/${NFT.book_address}`, \"_blank\")}>\n\t\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__contract__data'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__contract__label typo__color--n700'>Contract Address</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__contract__value typo__color--n500'>{(NFT.book_address||\"\").slice(0,12)}…{(NFT.book_address||\"\").slice((NFT.contract||\"\").length-10)}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__contract__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<ExternalLinkIcon width={24} height={24}/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__head typo__color--n700'>Genres</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__chips typo__transform--capital'>{JSON.parse(NFT.genres).map(g=><div className=\"book__data__container__desc__summary__chips__item\">{g}</div>)}</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__head typo__color--n700'>Preferred Age Group</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book__data__container__desc__summary__chips typo__transform--capital'>{JSON.parse(NFT.age_group).map(g=><div className=\"book__data__container__desc__summary__chips__item\">{g}</div>)}</div>\n\t\t\t\t\t\t\t\t\t\t{renderGrid()}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__right\">\n\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__interacts\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__interacts__item\">\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__subtitle typo__color--n500'>Likes</div>\n\t\t\t\t\t\t\t\t\t\t\t<LikeIcon width={24} height={24} className=\"book__data__container__desc__interacts__item__icon\" stroke={Liked?\"#ff5722\":\"currentColor\"} fill={Liked?\"#ff5722\":\"transparent\"} onClick={ ()=>likeHandler() }/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__head--5 typo__color--n600'>{Likes||\"0\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__interacts__item\">\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__subtitle typo__color--n500'>Reviews</div>\n\t\t\t\t\t\t\t\t\t\t\t<ReviewIcon width={24} height={24} stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__head--5 typo__color--n600'>{TotalReveiws||\"0\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__interacts__item\">\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__subtitle typo__color--n500'>Pages</div>\n\t\t\t\t\t\t\t\t\t\t\t<PrintIcon width={24} height={24} stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__head--5 typo__color--n600'>{NFT.print||\"00\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__interacts__item\">\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__subtitle typo__color--n500'>Sold</div>\n\t\t\t\t\t\t\t\t\t\t\t<CartIcon width={24} height={24} stroke=\"currentColor\"/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='typo__head--5 typo__color--n600'>{NFT.copies||\"00\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs\">\n\t\t\t\t\t\t\t\t\t\t<div ref={TabContainerRef} className=\"book__data__container__desc__tabs__container\">\n\t\t\t\t\t\t\t\t\t\t\t{renderTabs()}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"book__data__container__desc__tabs__data\">\n\t\t\t\t\t\t\t\t\t\t\t{renderTabData()}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ListModal book={NFT} userCopy={UserCopy} onListHandler={listPrice=>onListHandler(listPrice)} />\n\t\t\t\t\t<ReviewModal ReviewForm={ReviewForm} setReviewForm={setReviewForm} reviewHandler={reviewHandler}/>\n\t\t\t\t\t<QuoteModal QuotesForm={QuotesForm} setQuotesForm={setQuotesForm} quoteHandler={quoteHandler}/>\n\t\t\t\t\t<ShareListModal bookID={bookID} />\n\t\t\t\t</>\n\t\t\t\t:null\n\t\t\t}\n\t\t</Page>\n\t\t</>\n\t)\n}\n\nexport default BookPage\n"],"names":["UserState","useSelector","state","BWalletState","wallet","useWallet","dispatch","useDispatch","w3mAccount","useAccount","Loading","setLoading","useState","headers","address","getAddress","user","uid","authorization","tokens","acsTkn","tkn","orderId","BiconomyTransactions","async","bookAddress","bookPrice","onPurchaseHandler","order","axios","BASE_URL","amount","status","data","id","approveErc721Interface","ethers","approveData","encodeFunctionData","toString","safeMintData","USDC_ADDRESS","safeMintTx","to","smartAccount","on","txHash","response","receipt","transactionHash","logs","filter","log","topics","length","isFilled","topic","keccak256","toUtf8Bytes","transactionId","hash","tokenId","parseInt","url","method","copies","then","res","catch","err","ownerAddress","purchasePrice","setSnackbar","error","transactions","feeQuotes","prepareRefundTransactionBatch","transaction","createRefundTransactionBatch","feeQuote","sendTransaction","tx","gasLimit","hex","GAS_LIMIT","type","coverUrl","price","secondaryFromInDays","languageId","genreIDs","preview","name","author","cover","bookUrl","genres","ageGroup","pages","publication","synopsis","language","published","secondaryFrom","onPublishHandler","erc721Interface","MARKET_CONTRACT_ADDRESS","forEach","isUsable","formData","FormData","append","res4","show","message","prepareRefundTransaction","createRefundTransaction","WalletConnectTransactions","Contracts","getSigner","hideModal","Number","events","event","eventSignature","args","_hex","finally","indexOf","code","useEffect","showSpinner","hideSpinner","purchaseBook","isConnected","publishBook","collectPayment","transactionAmount","bookName","bookAuthor","buyerName","buyerEmail","buyerNumber","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","alert","result","currency","order_id","options","key","description","image","handler","orderCreationId","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","prefill","email","contact","notes","theme","color","window","Razorpay","open","props","TABS","label","icon","params","useParams","navigate","useNavigate","razorpay","useRazorpay","isLoggedIn","useIsLoggedIn","cryptoTransacts","useCryptoTransacts","WalletAddress","setWalletAddress","ActiveTab","setActiveTab","NFT","setNFT","Owner","setOwner","Listed","setListed","UserCopy","setUserCopy","Published","setPublished","bookID","setBookID","Likes","setLikes","Liked","setLiked","Rating","setRating","Review","setReview","Reviews","setReviews","TotalReveiws","setTotalReveiws","ReviewForm","setReviewForm","title","rating","Quote","setQuote","Quotes","setQuotes","QuotesForm","setQuotesForm","quote","totalReaders","setTotalReaders","liveReaderCount","setLiveReaderCount","totalReadTime","setTotalReadTime","TabContainerRef","useRef","GaTracker","listed","getReviews","useCallback","book_address","reviews","total","getUserReview","isNotEmpty","getQuotes","getUserQuote","likes","liked","total_readers","reader_count","total_read_time","book","new_owner","publisher_address","activeTabElement","getElementById","current","style","setProperty","offsetLeft","walletAddress","readHandler","base","token","cid","fileName","Helmet","content","Page","className","BackgroundBook","alt","loading","cover_display_url","cover_public_url","Stars","size","Button","onClick","token_id","signer","reason","includes","showModal","SHOW_LIST_MODAL","moment","secondary_sales_from","isSame","isBefore","isAfter","format","width","height","objectFit","join","slice","contract","JSON","parse","map","g","age_group","Math","ceil","stroke","fill","old","likedState","print","ref","tabsDOM","tab","push","renderTabs","renderReviews","reviewsDOM","review","reviewed_at","SHOW_REVIEW_MODAL","renderQuotes","quotes","quotesDOM","i","created_at","SHOW_QUOTE_MODAL","renderTabData","List","userCopy","onListHandler","listPrice","bookOrderId","bookTokenId","SHOW_SHARE_MODAL","ReviewModal","reviewHandler","QuoteModal","quoteHandler","ShareList"],"sourceRoot":""}