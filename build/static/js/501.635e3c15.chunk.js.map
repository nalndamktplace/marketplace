{"version":3,"file":"static/js/501.635e3c15.chunk.js","mappings":"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","sources":["pages/Collection.jsx"],"sourcesContent":["import axios from 'axios'\nimport { useLocation, useNavigate } from 'react-router'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setSnackbar } from '../store/actions/snackbar'\nimport { isFilled, isUsable } from '../helpers/functions'\nimport { hideSpinner, showSpinner } from '../store/actions/spinner'\n\nimport { BASE_URL } from '../config/env'\nimport { EXPLORE_PAGE_FILTERS } from '../config/filters'\n\nimport Page from '../components/hoc/Page/Page'\nimport Contracts from '../connections/contracts'\nimport Button from '../components/ui/Buttons/Button'\nimport BookItem from '../components/ui/BookItem/BookItem'\nimport FilterPanel from '../components/ui/FilterPanel/FilterPanel'\n\nimport {ReactComponent as FilterIcon} from \"../assets/icons/filter.svg\"\nimport {ReactComponent as GridViewIcon} from \"../assets/icons/layout-grid.svg\"\nimport {ReactComponent as ListViewIcon} from \"../assets/icons/layout-list.svg\"\nimport GaTracker from '../trackers/ga-tracker'\n\nconst CollectionPage = () => {\n\n\tconst DEFAULT_FILTERS = [{key: 'price', value: null, type: 'range'}, {key: 'genres', value: [], type: 'multiselect'}, {key: 'age_group', value: [], type: 'multiselect'}, {key: 'orderby', value: null, type: 'select'}]\n\n\tconst params = useLocation()\n\tconst navigate = useNavigate()\n\tconst dispatch = useDispatch()\n\n\tconst WalletState = useSelector(state => state.WalletState)\n\n\tconst [Collection, setCollection] = useState(null)\n\tconst [Nfts, setNfts] = useState([])\n\tconst [WalletAddress, setWalletAddress] = useState(null)\n\tconst [Filters, setFilters] = useState(DEFAULT_FILTERS)\n\tconst [Loading, setLoading] = useState(false)\n\tconst [FiltersPanelOpen, setFiltersPanelOpen] = useState(false)\n\tconst [layout, setLayout] = useState(window.innerWidth<600?\"LIST\":\"GRID\")\n\tconst [AllNfts, setAllNfts] = useState([])\n\tconst [maxPrice, setMaxPrice] = useState(100);\n\n\tconst buyHandler = nft => {\n\t\tGaTracker('event_collection_purchase_new')\n\t\tsetLoading(true)\n\t\tContracts.purchaseNft(WalletAddress, nft.book_address, nft.price.toString(), WalletState.wallet.signer).then(res => {\n\t\t\tdispatch(setSnackbar({show: true, message: \"Book purchased.\", type: 1}))\n\t\t\tconst tokenId = Number(res.events.filter(event => event.eventSignature === \"Transfer(address,address,uint256)\")[0].args[2]._hex)\n\t\t\taxios({\n\t\t\t\turl: BASE_URL+'/api/book/purchase',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {ownerAddress: WalletAddress, bookAddress: nft.book_address, tokenId}\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status !== 200) dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t\taxios({ url: BASE_URL+'/api/book/copies', method: 'POST', data: { bookAddress: nft.book_address, copies: tokenId } }).then(res => {\n\t\t\t\tif(res.status !== 200) dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t})\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\tif(err.code === 4001)\n\t\t\t\tdispatch(setSnackbar({show: true, message: \"Transaction denied by user.\", type: 3}))\n\t\t\telse dispatch(setSnackbar('ERROR'))\n\t\t})\n\t}\n\n\tconst openHandler = nft => {\n\t\tGaTracker('navigate_collection_book')\n\t\tnavigate('/book', {state: nft})\n\t}\n\n\tconst renderNfts = () => {\n\t\tlet nftDOM = []\n\t\tNfts.forEach(nft => {\n\t\t\tnftDOM.push(<BookItem layout={layout} key={nft.id} book={nft} onBuy={()=>buyHandler(nft)} onOpen={()=>openHandler(nft)}/>)\n\t\t})\n\t\treturn nftDOM\n\t}\n\n\tuseEffect(() => { setCollection(params.state) }, [params])\n\n\tuseEffect(() => {\n\t\tif(Loading) dispatch(showSpinner())\n\t\telse dispatch(hideSpinner())\n\t}, [Loading, dispatch])\n\n\tuseEffect(() => {\n\t\tif(isUsable(Collection)){\n\t\t\tsetLoading(true)\n\t\t\taxios({\n\t\t\t\turl: BASE_URL+'/api/collections/books?cid='+Collection.id,\n\t\t\t\tmethod: 'GET'\n\t\t\t}).then(res => {\n\t\t\t\tif(res.status === 200) setAllNfts(res.data)\n\t\t\t\telse dispatch(setSnackbar('NOT200'))\n\t\t\t}).catch(err => {\n\t\t\t\tdispatch(setSnackbar('ERROR'))\n\t\t\t}).finally(() => setLoading(false))\n\t\t}\n\t}, [dispatch, Collection])\n\n\tuseEffect(() => {\n\t\tsetLoading(true)\n\t\tif(isUsable(WalletState.wallet.provider)) setWalletAddress(WalletState.wallet.address)\n\t\tsetLoading(false)\n\t}, [WalletState])\n\n\tuseEffect(() => {\n\t\tlet nfts = AllNfts\n\t\tif(isUsable(nfts)){\n\t\t\tFilters.forEach(filter => {\n\t\t\t\tswitch (filter.type) {\n\t\t\t\t\tcase 'range':\n\t\t\t\t\t\tif(isUsable(filter.value))\n\t\t\t\t\t\tnfts = nfts.filter(nft => nft[filter.key] <= filter.value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'multiselect':\n\t\t\t\t\t\tif(isFilled(filter.value)){\n\t\t\t\t\t\t\tlet tempNfts = []\n\t\t\t\t\t\t\tfilter.value.forEach(filterValue => nfts.forEach(nft => { if(nft[filter.key].indexOf(filterValue)>-1 && tempNfts.filter(tempNft => tempNft[\"id\"] === nft.id).length<1) tempNfts.push(nft) }) )\n\t\t\t\t\t\t\tnfts = tempNfts\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'select':\n\t\t\t\t\t\tif(filter.key === 'orderby'){\n\t\t\t\t\t\t\tswitch (filter.value) {\n\t\t\t\t\t\t\t\tcase 'PRICE_L_H':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.price<b.price)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'PRICE_H_L':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.price>b.price)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'RATING_L_H':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.rating<b.rating)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase 'RATING_H_L':\n\t\t\t\t\t\t\t\t\tnfts.sort((a,b) => a.rating>b.rating)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetNfts(nfts)\n\t\t}\n\t}, [Filters, AllNfts])\n\n\tuseEffect(()=>{\n\t\tif(!isFilled(AllNfts)) return ;\n\t\tlet maxNftPrice = Math.max(...AllNfts.map(nft => nft.price));\n\t\tmaxNftPrice = Math.ceil(maxNftPrice / 10) * 10 ; \n\t\tsetMaxPrice(maxNftPrice||100)\n\t},[AllNfts])\n\n\tuseEffect(() => {\n\t\tGaTracker('page_view_collection')\n\t}, [])\n\n\treturn (\n\t\t<Page noFooter={true} showRibbion={false} noPadding={true} fluid={true} containerClass={'explore'}>\n\t\t\t<div className=\"explore__data\">\n\t\t\t\t<div className=\"explore__data__filter-panel-container\" data-filter-open={FiltersPanelOpen}>\n\t\t\t\t\t<FilterPanel maxPrice={maxPrice} setFiltersPanelOpen={setFiltersPanelOpen} config={EXPLORE_PAGE_FILTERS} defaults={DEFAULT_FILTERS} filters={Filters} setFilters={setFilters}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"explore__data__books\" data-filter-open={FiltersPanelOpen}> \n\t\t\t\t\t<div className=\"explore__data__books__header\">\n\t\t\t\t\t\t<div className='explore__data__books__header__filter'>\n\t\t\t\t\t\t\t<Button type=\"icon\" onClick={()=>setFiltersPanelOpen(s=>!s)}><FilterIcon fill={FiltersPanelOpen?\"currentColor\":\"transparent\"} /></Button>\n\t\t\t\t\t\t\t<div className=\"typo__color--n500\">Found <span className=\"typo__color--n700\" style={{fontWeight:\"500\"}}>{Nfts.length}</span> results</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"explore__data__books__header__layout\">\n\t\t\t\t\t\t\t<Button className=\"account__data__books__header__layout__button\" onClick={()=>setLayout(\"LIST\")}><ListViewIcon/><span>List</span></Button>\n\t\t\t\t\t\t\t<Button className=\"account__data__books__header__layout__button\" onClick={()=>setLayout(\"GRID\")}><GridViewIcon/><span>GRID</span></Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"explore__data__books__wrapper\" data-layout={layout}>\n\t\t\t\t\t\t{isUsable(Nfts) && Nfts.length > 0\n\t\t\t\t\t\t\t? \trenderNfts()\n\t\t\t\t\t\t\t: \t<div className='explore__data__books__wrapper__empty'>\n\t\t\t\t\t\t\t\t\t<img src='https://imagedelivery.net/yOWneHxM1h9mu46Te3Yjwg/fb06196e-29ca-4c59-9460-6fdbd43fa700/square240' alt=\"books shelf\" className=\"explore__data__books__wrapper__image\" loading=\"lazy\"/>\n\t\t\t\t\t\t\t\t\t<h4 className=\"typo__head typo__head--4\">No eBooks yet</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Page>\n\t)\n}\n\nexport default CollectionPage"],"names":["DEFAULT_FILTERS","key","value","type","params","useLocation","navigate","useNavigate","dispatch","useDispatch","WalletState","useSelector","state","useState","Collection","setCollection","Nfts","setNfts","WalletAddress","setWalletAddress","Filters","setFilters","Loading","setLoading","FiltersPanelOpen","setFiltersPanelOpen","window","innerWidth","layout","setLayout","AllNfts","setAllNfts","maxPrice","setMaxPrice","useEffect","showSpinner","hideSpinner","isUsable","axios","url","BASE_URL","id","method","then","res","status","data","setSnackbar","catch","err","finally","wallet","provider","address","nfts","forEach","filter","nft","isFilled","tempNfts","filterValue","indexOf","tempNft","length","push","sort","a","b","price","rating","maxNftPrice","Math","max","map","ceil","GaTracker","noFooter","showRibbion","noPadding","fluid","containerClass","className","config","EXPLORE_PAGE_FILTERS","defaults","filters","onClick","s","fill","style","fontWeight","nftDOM","book","onBuy","Contracts","book_address","toString","signer","show","message","tokenId","Number","events","event","eventSignature","args","_hex","ownerAddress","bookAddress","copies","code","buyHandler","onOpen","openHandler","renderNfts","src","alt","loading"],"sourceRoot":""}